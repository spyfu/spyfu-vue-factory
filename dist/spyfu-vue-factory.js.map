{"version":3,"file":"spyfu-vue-factory.js","sources":["../lib/stub_route.js","../lib/factory.js"],"sourcesContent":["/**\r\n * Stub a named route.\r\n *\r\n * @param  {string} name    the name of the route being stubbed\r\n * @return {Array}\r\n */\r\nexport default function (name) {\r\n    return {\r\n        name,\r\n        component: {\r\n            render: h => h('div'),\r\n            functional: true,\r\n        },\r\n        path: '/' + name.replace(/[^\\w]/g, \"-\"),\r\n    };\r\n}\r\n","import stubRoute from './stub_route';\r\n\r\nconst Vue = require('vue/dist/vue.common.js');\r\nconst optionalRequire = require('optional-require');\r\nconst merge = require('deepmerge');\r\n\r\nlet vuexIsInstalled = false;\r\nlet routerIsInstalled = false;\r\n\r\n/**\r\n * Make a function that returns a component factory.\r\n *\r\n * @param  {Object}     factoryOpts\r\n * @return {Function}\r\n */\r\nexport default function (factoryOpts = {}) {\r\n    factoryOpts.components = factoryOpts.components || {};\r\n    // factoryOpts.modules = factoryOpts.modules || {};\r\n    factoryOpts.routes = factoryOpts.routes || [];\r\n\r\n    //\r\n    // component factory\r\n    //\r\n    return function (options, state) {\r\n        const baseOptions = {\r\n            components: factoryOpts.components,\r\n            el: document.createElement('div'),\r\n            template: '<div>no template</div>',\r\n        };\r\n\r\n        // create a vuex store\r\n        let store = undefined;\r\n\r\n        try  {\r\n            const Vuex = optionalRequire('vuex') || null;\r\n\r\n            if ((factoryOpts.modules || state) && !Vuex) {\r\n                throw new Error;\r\n            } else {\r\n                store = createStore(factoryOpts.modules || {}, state || {});\r\n\r\n                baseOptions.store = store;\r\n            }\r\n        } catch (e) {\r\n            console.warn ('Missing \"vuex\" dependency, no state will be injected.');\r\n        }\r\n\r\n        // create a vue router\r\n        let router = undefined;\r\n\r\n        try {\r\n            const VueRouter = optionalRequire('vue-router') || null;\r\n\r\n            if (factoryOpts.routes && !VueRouter) {\r\n                throw new Error;\r\n            } else {\r\n                router = createRouter(factoryOpts.routes);\r\n\r\n                baseOptions.router = router;\r\n            }\r\n        } catch (e) {\r\n            console.warn ('Missing \"vue-router\" dependency, no router will be injected.');\r\n        }\r\n\r\n        // sync the store with the router\r\n        if (store && router) {\r\n            try {\r\n                const VuexRouterSync = optionalRequire('vuex-router-sync') || null;\r\n\r\n                if (VuexRouterSync) {\r\n                    VuexRouterSync.sync(store, router);\r\n                }\r\n            } catch (e) {\r\n                // continue, regardless of error\r\n            }\r\n        }\r\n\r\n        // finally, return the instantiated vue component\r\n        return new Vue(Object.assign(baseOptions, options));\r\n    };\r\n}\r\n\r\n// helper function to create a router instance\r\nfunction createRouter(routes = []) {\r\n    let VueRouter = require('vue-router');\r\n\r\n    if (typeof VueRouter.default === 'function') {\r\n        VueRouter = VueRouter.default;\r\n    }\r\n\r\n    if (!routerIsInstalled) {\r\n        Vue.use (VueRouter);\r\n        routerIsInstalled = true;\r\n    }\r\n\r\n    const normalizedRoutes = routes.map(route => {\r\n        return typeof route === 'string'\r\n            ? stubRoute(route)\r\n            : route;\r\n    });\r\n\r\n    return new VueRouter({\r\n        abstract: true,\r\n        routes: normalizedRoutes,\r\n    });\r\n}\r\n\r\n// helper function to create a vuex store instance\r\nfunction createStore(rawModules, state) {\r\n    let Vuex = require('vuex');\r\n\r\n    if (typeof Vuex.default !== 'undefined') {\r\n        Vuex = Vuex.default;\r\n    }\r\n\r\n    if (!vuexIsInstalled) {\r\n        Vue.use(Vuex);\r\n        vuexIsInstalled = true;\r\n    }\r\n\r\n    // create a normalized copy of our vuex modules\r\n    const normalizedModules = normalizeModules(rawModules);\r\n\r\n    // merge in any test specific state\r\n    const modules = mergeTestState(normalizedModules, state);\r\n\r\n    // return the instantiated vuex store\r\n    return new Vuex.Store({ state, modules, strict: true });\r\n}\r\n\r\n// helper function to evaluate the state functions of vuex modules\r\nfunction normalizeModules(modules) {\r\n    const normalized = {};\r\n\r\n    Object.keys(modules).forEach((key) => {\r\n        const module = modules[key];\r\n\r\n        // make sure each vuex module has all keys defined\r\n        normalized[key] = {\r\n            actions: module.actions || {},\r\n            getters: module.getters || {},\r\n            modules: module.modules ? normalizeModules(module.modules) : {},\r\n            mutations: module.mutations || {},\r\n            namespaced: module.namespaced || false,\r\n            state: {},\r\n        };\r\n\r\n        // make sure our state is a fresh object\r\n        if (typeof module.state === 'function') {\r\n            normalized[key].state = module.state();\r\n        } else if (typeof module.state === 'object') {\r\n            normalized[key].state = JSON.parse(JSON.stringify(module.state));\r\n        }\r\n    });\r\n\r\n    return normalized;\r\n}\r\n\r\n// helper to find vuex modules via their namespace\r\nfunction findModule(store, namespace) {\r\n    return namespace.split('/').reduce((obj, key) => {\r\n        // root modules will exist directly on the store\r\n        if (obj && obj[key]) {\r\n            return obj[key];\r\n        }\r\n\r\n        // child stores will exist in a modules object\r\n        if (obj && obj.modules && obj.modules[key]) {\r\n            return obj.modules[key];\r\n        }\r\n\r\n        // if we couldn't find the module, throw an error\r\n        // istanbul ignore next\r\n        throw new Error(`Could not find module \"${namespace}\" in store.`);\r\n    }, store);\r\n}\r\n\r\n// helper function to merge state with vuex modules\r\nfunction mergeTestState(modules, state) {\r\n    Object.keys(state).forEach((key) => {\r\n        const module = findModule(modules, key);\r\n\r\n        if (module) {\r\n            module.state = merge(module.state, state[key]);\r\n        }\r\n    });\r\n\r\n    return modules;\r\n}\r\n"],"names":["name","h","replace","Vue","require","optionalRequire","merge","vuexIsInstalled","routerIsInstalled","factoryOpts","components","routes","options","state","baseOptions","document","createElement","store","undefined","Vuex","modules","Error","createStore","e","warn","router","VueRouter","createRouter","VuexRouterSync","sync","Object","assign","default","use","normalizedRoutes","map","route","stubRoute","rawModules","normalizedModules","normalizeModules","mergeTestState","Store","strict","normalized","keys","forEach","key","module","actions","getters","mutations","namespaced","babelHelpers.typeof","JSON","parse","stringify","findModule","namespace","split","reduce","obj"],"mappings":"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"}
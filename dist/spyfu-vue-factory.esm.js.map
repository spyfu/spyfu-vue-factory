{"version":3,"file":"spyfu-vue-factory.esm.js","sources":["../lib/clone_constructor.js","../node_modules/deepmerge/dist/es.js","../lib/stub_route.js","../lib/factory.js"],"sourcesContent":["// unfortunately, we can't use the version of this that is\r\n// included with vue-test-utils, because they do not use\r\n// the compiler-included version of Vue as their base.\r\n// https://github.com/vuejs/vue-test-utils/blob/dev/src/create-local-vue.js\r\nconst cloneDeep = require('lodash.clonedeep');\r\n// import errorHandler from './lib/error-handler'\r\n\r\nexport default function(factoryOpts) {\r\n    const Vue = factoryOpts && factoryOpts.Vue\r\n        ? factoryOpts.Vue\r\n        : require('vue/dist/vue.common.js');\r\n        \r\n    const instance = Vue.extend();\r\n\r\n    // clone global APIs\r\n    Object.keys(Vue).forEach(key => {\r\n        if (!instance.hasOwnProperty(key)) {\r\n            const original = Vue[key]\r\n            instance[key] = typeof original === 'object'\r\n                ? cloneDeep(original)\r\n                : original\r\n        }\r\n    });\r\n\r\n    // config is not enumerable\r\n    instance.config = cloneDeep(Vue.config);\r\n\r\n    // instance.config.errorHandler = errorHandler\r\n\r\n    // option merge strategies need to be exposed by reference\r\n    // so that merge strats registered by plguins can work properly\r\n    instance.config.optionMergeStrategies = Vue.config.optionMergeStrategies;\r\n\r\n    // make sure all extends are based on this instance.\r\n    // this is important so that global components registered by plugins,\r\n    // e.g. router-link are created using the correct base constructor\r\n    instance.options._base = instance;\r\n\r\n    // compat for vue-router < 2.7.1 where it does not allow multiple installs\r\n    if (instance._installedPlugins && instance._installedPlugins.length) {\r\n        instance._installedPlugins.length = 0;\r\n    }\r\n\r\n    const use = instance.use;\r\n\r\n    instance.use = (plugin, ...rest) => {\r\n        if (plugin.installed === true) {\r\n            plugin.installed = false;\r\n        }\r\n\r\n        if (plugin.install && plugin.install.installed === true) {\r\n            plugin.install.installed = false;\r\n        }\r\n\r\n        use.call(instance, plugin, ...rest);\r\n    }\r\n\r\n    return instance;\r\n}","var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, optionsArgument) {\n\tvar clone = !optionsArgument || optionsArgument.clone !== false;\n\n\treturn (clone && isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, optionsArgument)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, optionsArgument)\n\t})\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n\tvar destination = {};\n\tif (isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], optionsArgument);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar options = optionsArgument || { arrayMerge: defaultArrayMerge };\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, optionsArgument)\n\t} else if (sourceIsArray) {\n\t\tvar arrayMerge = options.arrayMerge || defaultArrayMerge;\n\t\treturn arrayMerge(target, source, optionsArgument)\n\t} else {\n\t\treturn mergeObject(target, source, optionsArgument)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, optionsArgument)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","/**\r\n * Stub a named route.\r\n *\r\n * @param  {string} name    the name of the route being stubbed\r\n * @return {Array}\r\n */\r\nexport default function (name) {\r\n    return {\r\n        name,\r\n        component: {\r\n            render: h => h('div'),\r\n            functional: true,\r\n        },\r\n        path: '/' + name.replace(/[^\\w]/g, \"-\"),\r\n    };\r\n}\r\n","import cloneConstructor from './clone_constructor';\r\nimport merge from 'deepmerge';\r\nimport stubRoute from './stub_route';\r\nconst optionalRequire = require(\"optional-require\")(require);\r\n\r\n/**\r\n * Make a function that returns a component factory.\r\n *\r\n * @param  {Object}     factoryOpts\r\n * @return {Function}\r\n */\r\nexport default function (factoryOpts = {}) {\r\n    factoryOpts.components = factoryOpts.components || {};\r\n    factoryOpts.routes = factoryOpts.routes || [];\r\n\r\n    //\r\n    // component factory\r\n    //\r\n    return function (options, state) {\r\n        const ClonedVue = cloneConstructor(factoryOpts);\r\n\r\n        const baseOptions = {\r\n            components: factoryOpts.components,\r\n            el: document.createElement('div'),\r\n            template: '<div>no template</div>',\r\n        };\r\n\r\n        // create a vuex store\r\n        let Vuex = null;\r\n        let store = undefined;\r\n\r\n        try {\r\n            Vuex = require('vuex');\r\n        } catch (e) {}\r\n\r\n        if ((factoryOpts.modules || state) && !Vuex) {\r\n            console.warn ('Missing \"vuex\" dependency, no state will be injected.')\r\n        } else {\r\n            store = createStore(ClonedVue, factoryOpts.modules || {}, state || {});\r\n\r\n            baseOptions.store = store;\r\n        }\r\n\r\n        // create a vue router\r\n        let VueRouter = null;\r\n        let router = undefined;\r\n\r\n        try {\r\n            VueRouter = require('vue-router');\r\n        } catch(e) {}\r\n\r\n        if (factoryOpts.routes && !VueRouter) {\r\n            console.warn ('Missing \"vue-router\" dependency, no router will be injected.');\r\n        } else {\r\n            router = createRouter(ClonedVue, factoryOpts.routes);\r\n\r\n            baseOptions.router = router;\r\n        }\r\n\r\n        // sync the store with the router\r\n        if (store && router) {\r\n            try {\r\n                const VuexRouterSync = optionalRequire('vuex-router-sync') || null;\r\n\r\n                if (VuexRouterSync) {\r\n                    VuexRouterSync.sync(store, router);\r\n                }\r\n            } catch (e) {\r\n                // continue, regardless of error\r\n            }\r\n        }\r\n\r\n        // stub transition components\r\n        if (factoryOpts.stubTransitions) {\r\n            ClonedVue.component('transition', {\r\n                render() {\r\n                    return this.$slots.default[0];\r\n                },\r\n                abstract: true,\r\n            });\r\n        }\r\n\r\n        // finally, return the instantiated vue component\r\n        return new ClonedVue(Object.assign(baseOptions, options));\r\n    };\r\n}\r\n\r\n// helper function to create a router instance\r\nfunction createRouter(ClonedVue, routes = []) {\r\n    let VueRouter = require('vue-router');\r\n\r\n    if (typeof VueRouter.default === 'function') {\r\n        VueRouter = VueRouter.default;\r\n    }\r\n\r\n    ClonedVue.use (VueRouter);\r\n\r\n    const normalizedRoutes = routes.map(route => {\r\n        return typeof route === 'string'\r\n            ? stubRoute(route)\r\n            : route;\r\n    });\r\n\r\n    return new VueRouter({\r\n        mode: 'abstract',\r\n        routes: normalizedRoutes,\r\n    });\r\n}\r\n\r\n// helper function to create a vuex store instance\r\nfunction createStore(ClonedVue, rawModules, state) {\r\n    let Vuex = require('vuex');\r\n\r\n    if (typeof Vuex.default !== 'undefined') {\r\n        Vuex = Vuex.default;\r\n    }\r\n\r\n    ClonedVue.use(Vuex);\r\n\r\n    // create a normalized copy of our vuex modules\r\n    const normalizedModules = normalizeModules(rawModules);\r\n\r\n    // merge in any test specific state\r\n    const modules = mergeTestState(normalizedModules, state);\r\n\r\n    // return the instantiated vuex store\r\n    return new Vuex.Store({ state, modules, strict: true });\r\n}\r\n\r\n// helper function to evaluate the state functions of vuex modules\r\nfunction normalizeModules(modules) {\r\n    const normalized = {};\r\n\r\n    Object.keys(modules).forEach((key) => {\r\n        const module = modules[key];\r\n\r\n        // make sure each vuex module has all keys defined\r\n        normalized[key] = {\r\n            actions: module.actions || {},\r\n            getters: module.getters || {},\r\n            modules: module.modules ? normalizeModules(module.modules) : {},\r\n            mutations: module.mutations || {},\r\n            namespaced: module.namespaced || false,\r\n            state: {},\r\n        };\r\n\r\n        // make sure our state is a fresh object\r\n        if (typeof module.state === 'function') {\r\n            normalized[key].state = module.state();\r\n        } else if (typeof module.state === 'object') {\r\n            normalized[key].state = JSON.parse(JSON.stringify(module.state));\r\n        }\r\n    });\r\n\r\n    return normalized;\r\n}\r\n\r\n// helper to find vuex modules via their namespace\r\nfunction findModule(store, namespace) {\r\n    return namespace.split('/').reduce((obj, key) => {\r\n        // root modules will exist directly on the store\r\n        if (obj && obj[key]) {\r\n            return obj[key];\r\n        }\r\n\r\n        // child stores will exist in a modules object\r\n        if (obj && obj.modules && obj.modules[key]) {\r\n            return obj.modules[key];\r\n        }\r\n\r\n        // if we couldn't find the module, throw an error\r\n        // istanbul ignore next\r\n        throw new Error(`Could not find module \"${namespace}\" in store.`);\r\n    }, store);\r\n}\r\n\r\n// helper function to merge state with vuex modules\r\nfunction mergeTestState(modules, state) {\r\n    Object.keys(state).forEach((key) => {\r\n        const module = findModule(modules, key);\r\n\r\n        if (module) {\r\n            module.state = merge(module.state, state[key]);\r\n        }\r\n    });\r\n\r\n    return modules;\r\n}\r\n"],"names":["cloneDeep","require","factoryOpts","Vue","instance","extend","keys","forEach","hasOwnProperty","key","original","config","optionMergeStrategies","options","_base","_installedPlugins","length","use","plugin","rest","installed","install","call","isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","optionsArgument","clone","deepmerge","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","sourceIsArray","targetIsArray","arrayMerge","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","deepmerge_1","name","h","replace","optionalRequire","components","routes","state","ClonedVue","cloneConstructor","baseOptions","document","createElement","Vuex","store","undefined","e","modules","warn","createStore","VueRouter","router","createRouter","VuexRouterSync","sync","stubTransitions","component","$slots","default","assign","normalizedRoutes","route","stubRoute","rawModules","normalizedModules","normalizeModules","mergeTestState","Store","strict","normalized","module","actions","getters","mutations","namespaced","babelHelpers.typeof","JSON","parse","stringify","findModule","namespace","split","obj","merge"],"mappings":"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"}
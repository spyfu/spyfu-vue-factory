{"version":3,"file":"spyfu-vue-factory.esm.js","sources":["../lib/index.js"],"sourcesContent":["import { sync } from 'vuex-router-sync';\nimport merge from 'deepmerge';\nimport Vue from 'vue/dist/vue.common.js';\nimport VueRouter from 'vue-router';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\nVue.use(VueRouter);\n\n/**\n * Make a function that returns a component factory.\n *\n * @param  {Object}     factoryOpts\n * @return {Function}\n */\nexport default function (factoryOpts = {}) {\n    factoryOpts.components = factoryOpts.components || {};\n    factoryOpts.modules = factoryOpts.modules || {};\n    factoryOpts.routes = factoryOpts.routes || [];\n\n    //\n    // component factory\n    //\n    return function (options, state = {}) {\n        // create a synced router and store for our component\n        const router = createRouter(factoryOpts.routes);\n        const store = createStore(factoryOpts.modules, state);\n        sync(store, router);\n\n        // set up our vm with an in-memory dom element\n        const vm = Object.assign({\n            components: factoryOpts.components,\n            el: document.createElement('div'),\n            template: '<div>no template</div>',\n            router,\n            store,\n        }, options);\n\n        // finally, return the instantiated vue component\n        return new Vue(vm);\n    };\n}\n\n// helper function to create a router instance\nfunction createRouter(routes = []) {\n    return new VueRouter({ abstract: true, routes });\n}\n\n// helper function to create a vuex store instance\nfunction createStore(rawModules, state) {\n    // create a normalized copy of our vuex modules\n    const normalizedModules = normalizeModules(rawModules);\n\n    // merge in any test specific state\n    const modules = mergeTestState(normalizedModules, state);\n\n    // return the instantiated vuex store\n    return new Vuex.Store({ state, modules, strict: true });\n}\n\n// helper function to evaluate the state functions of vuex modules\nfunction normalizeModules(modules) {\n    const normalized = {};\n\n    Object.keys(modules).forEach((key) => {\n        const module = modules[key];\n\n        // make sure each vuex module has all keys defined\n        normalized[key] = {\n            actions: module.actions || {},\n            getters: module.getters || {},\n            modules: module.modules ? normalizeModules(module.modules) : {},\n            mutations: module.mutations || {},\n            namespaced: module.namespaced || false,\n            state: {},\n        };\n\n        // make sure our state is a fresh object\n        if (typeof module.state === 'function') {\n            normalized[key].state = module.state();\n        } else if (typeof module.state === 'object') {\n            normalized[key].state = JSON.parse(JSON.stringify(module.state));\n        }\n    });\n\n    return normalized;\n}\n\n// helper to find vuex modules via their namespace\nfunction findModule(store, namespace) {\n    return namespace.split('/').reduce((obj, key) => {\n        // root modules will exist directly on the store\n        if (obj && obj[key]) {\n            return obj[key];\n        }\n\n        // child stores will exist in a modules object\n        if (obj && obj.modules && obj.modules[key]) {\n            return obj.modules[key];\n        }\n\n        // if we couldn't find the module, throw an error\n        // istanbul ignore next\n        throw new Error(`Could not find module \"${namespace}\" in store.`);\n    }, store);\n}\n\n// helper function to merge state with vuex modules\nfunction mergeTestState(modules, state) {\n    Object.keys(state).forEach((key) => {\n        const module = findModule(modules, key);\n\n        if (module) {\n            module.state = merge(module.state, state[key]);\n        }\n    });\n\n    return modules;\n}\n"],"names":["Vue","use","Vuex","VueRouter","factoryOpts","components","modules","routes","options","state","router","createRouter","store","createStore","vm","Object","assign","document","createElement","abstract","rawModules","normalizedModules","normalizeModules","mergeTestState","Store","strict","normalized","keys","forEach","key","module","actions","getters","mutations","namespaced","babelHelpers.typeof","JSON","parse","stringify","findModule","namespace","split","reduce","obj","Error","merge"],"mappings":";;;;;;;;;;;;AAMAA,IAAIC,GAAJ,CAAQC,IAAR;AACAF,IAAIC,GAAJ,CAAQE,SAAR;;;;;;;;AAQA,YAAe,YAA4B;QAAlBC,WAAkB,uEAAJ,EAAI;;gBAC3BC,UAAZ,GAAyBD,YAAYC,UAAZ,IAA0B,EAAnD;gBACYC,OAAZ,GAAsBF,YAAYE,OAAZ,IAAuB,EAA7C;gBACYC,MAAZ,GAAqBH,YAAYG,MAAZ,IAAsB,EAA3C;;;;;WAKO,UAAUC,OAAV,EAA+B;YAAZC,KAAY,uEAAJ,EAAI;;;YAE5BC,SAASC,aAAaP,YAAYG,MAAzB,CAAf;YACMK,QAAQC,YAAYT,YAAYE,OAAxB,EAAiCG,KAAjC,CAAd;aACKG,KAAL,EAAYF,MAAZ;;;YAGMI,KAAKC,OAAOC,MAAP,CAAc;wBACTZ,YAAYC,UADH;gBAEjBY,SAASC,aAAT,CAAuB,KAAvB,CAFiB;sBAGX,wBAHW;0BAAA;;SAAd,EAMRV,OANQ,CAAX;;;eASO,IAAIR,GAAJ,CAAQc,EAAR,CAAP;KAhBJ;;;;AAqBJ,SAASH,YAAT,GAAmC;QAAbJ,MAAa,uEAAJ,EAAI;;WACxB,IAAIJ,SAAJ,CAAc,EAAEgB,UAAU,IAAZ,EAAkBZ,cAAlB,EAAd,CAAP;;;;AAIJ,SAASM,WAAT,CAAqBO,UAArB,EAAiCX,KAAjC,EAAwC;;QAE9BY,oBAAoBC,iBAAiBF,UAAjB,CAA1B;;;QAGMd,UAAUiB,eAAeF,iBAAf,EAAkCZ,KAAlC,CAAhB;;;WAGO,IAAIP,KAAKsB,KAAT,CAAe,EAAEf,YAAF,EAASH,gBAAT,EAAkBmB,QAAQ,IAA1B,EAAf,CAAP;;;;AAIJ,SAASH,gBAAT,CAA0BhB,OAA1B,EAAmC;QACzBoB,aAAa,EAAnB;;WAEOC,IAAP,CAAYrB,OAAZ,EAAqBsB,OAArB,CAA6B,UAACC,GAAD,EAAS;YAC5BC,SAASxB,QAAQuB,GAAR,CAAf;;;mBAGWA,GAAX,IAAkB;qBACLC,OAAOC,OAAP,IAAkB,EADb;qBAELD,OAAOE,OAAP,IAAkB,EAFb;qBAGLF,OAAOxB,OAAP,GAAiBgB,iBAAiBQ,OAAOxB,OAAxB,CAAjB,GAAoD,EAH/C;uBAIHwB,OAAOG,SAAP,IAAoB,EAJjB;wBAKFH,OAAOI,UAAP,IAAqB,KALnB;mBAMP;SANX;;;YAUI,OAAOJ,OAAOrB,KAAd,KAAwB,UAA5B,EAAwC;uBACzBoB,GAAX,EAAgBpB,KAAhB,GAAwBqB,OAAOrB,KAAP,EAAxB;SADJ,MAEO,IAAI0B,QAAOL,OAAOrB,KAAd,MAAwB,QAA5B,EAAsC;uBAC9BoB,GAAX,EAAgBpB,KAAhB,GAAwB2B,KAAKC,KAAL,CAAWD,KAAKE,SAAL,CAAeR,OAAOrB,KAAtB,CAAX,CAAxB;;KAjBR;;WAqBOiB,UAAP;;;;AAIJ,SAASa,UAAT,CAAoB3B,KAApB,EAA2B4B,SAA3B,EAAsC;WAC3BA,UAAUC,KAAV,CAAgB,GAAhB,EAAqBC,MAArB,CAA4B,UAACC,GAAD,EAAMd,GAAN,EAAc;;YAEzCc,OAAOA,IAAId,GAAJ,CAAX,EAAqB;mBACVc,IAAId,GAAJ,CAAP;;;;YAIAc,OAAOA,IAAIrC,OAAX,IAAsBqC,IAAIrC,OAAJ,CAAYuB,GAAZ,CAA1B,EAA4C;mBACjCc,IAAIrC,OAAJ,CAAYuB,GAAZ,CAAP;;;;;cAKE,IAAIe,KAAJ,6BAAoCJ,SAApC,iBAAN;KAbG,EAcJ5B,KAdI,CAAP;;;;AAkBJ,SAASW,cAAT,CAAwBjB,OAAxB,EAAiCG,KAAjC,EAAwC;WAC7BkB,IAAP,CAAYlB,KAAZ,EAAmBmB,OAAnB,CAA2B,UAACC,GAAD,EAAS;YAC1BC,SAASS,WAAWjC,OAAX,EAAoBuB,GAApB,CAAf;;YAEIC,MAAJ,EAAY;mBACDrB,KAAP,GAAeoC,MAAMf,OAAOrB,KAAb,EAAoBA,MAAMoB,GAAN,CAApB,CAAf;;KAJR;;WAQOvB,OAAP;;;;;"}
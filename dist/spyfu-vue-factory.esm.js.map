{"version":3,"file":"spyfu-vue-factory.esm.js","sources":["../node_modules/deepmerge/dist/es.js","../lib/stub_route.js","../lib/factory.js"],"sourcesContent":["var isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, optionsArgument) {\n\tvar clone = !optionsArgument || optionsArgument.clone !== false;\n\n\treturn (clone && isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, optionsArgument)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, optionsArgument)\n\t})\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n\tvar destination = {};\n\tif (isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], optionsArgument);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar options = optionsArgument || { arrayMerge: defaultArrayMerge };\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, optionsArgument)\n\t} else if (sourceIsArray) {\n\t\tvar arrayMerge = options.arrayMerge || defaultArrayMerge;\n\t\treturn arrayMerge(target, source, optionsArgument)\n\t} else {\n\t\treturn mergeObject(target, source, optionsArgument)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, optionsArgument)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nexport default deepmerge_1;\n","/**\r\n * Stub a named route.\r\n *\r\n * @param  {string} name    the name of the route being stubbed\r\n * @return {Array}\r\n */\r\nexport default function (name) {\r\n    return {\r\n        name,\r\n        component: {\r\n            render: h => h('div'),\r\n            functional: true,\r\n        },\r\n        path: '/' + name.replace(/[^\\w]/g, \"-\"),\r\n    };\r\n}\r\n","const Vue = require('vue/dist/vue.common.js');\r\nimport merge from 'deepmerge';\r\nimport stubRoute from './stub_route';\r\n\r\nlet vuexIsInstalled = false;\r\nlet routerIsInstalled = false;\r\n\r\n/**\r\n * Make a function that returns a component factory.\r\n *\r\n * @param  {Object}     factoryOpts\r\n * @return {Function}\r\n */\r\nexport default function (factoryOpts = {}) {\r\n    factoryOpts.components = factoryOpts.components || {};\r\n    // factoryOpts.modules = factoryOpts.modules || {};\r\n    factoryOpts.routes = factoryOpts.routes || [];\r\n\r\n    //\r\n    // component factory\r\n    //\r\n    return function (options, state) {\r\n        const baseOptions = {\r\n            components: factoryOpts.components,\r\n            el: document.createElement('div'),\r\n            template: '<div>no template</div>',\r\n        };\r\n\r\n        // create a vuex store\r\n        let Vuex = null;\r\n        let store = undefined;\r\n\r\n        try {\r\n            Vuex = require('vuex');\r\n        } catch (e) {}\r\n\r\n        if ((factoryOpts.modules || state) && !Vuex) {\r\n            console.warn ('Missing \"vuex\" dependency, no state will be injected.')\r\n        } else {\r\n            store = createStore(factoryOpts.modules || {}, state || {});\r\n\r\n            baseOptions.store = store;\r\n        }\r\n\r\n        // create a vue router\r\n        let VueRouter = null;\r\n        let router = undefined;\r\n\r\n        try {\r\n            VueRouter = require('vue-router');\r\n        } catch(e) {}\r\n\r\n        if (factoryOpts.routes && !VueRouter) {\r\n            console.warn ('Missing \"vue-router\" dependency, no router will be injected.');\r\n        } else {\r\n            router = createRouter(factoryOpts.routes);\r\n\r\n            baseOptions.router = router;\r\n        }\r\n\r\n        // sync the store with the router\r\n        if (store && router) {\r\n            try {\r\n                const VuexRouterSync = optionalRequire('vuex-router-sync') || null;\r\n\r\n                if (VuexRouterSync) {\r\n                    VuexRouterSync.sync(store, router);\r\n                }\r\n            } catch (e) {\r\n                // continue, regardless of error\r\n            }\r\n        }\r\n\r\n        // finally, return the instantiated vue component\r\n        return new Vue(Object.assign(baseOptions, options));\r\n    };\r\n}\r\n\r\n// helper function to create a router instance\r\nfunction createRouter(routes = []) {\r\n    let VueRouter = require('vue-router');\r\n\r\n    if (typeof VueRouter.default === 'function') {\r\n        VueRouter = VueRouter.default;\r\n    }\r\n\r\n    if (!routerIsInstalled) {\r\n        Vue.use (VueRouter);\r\n        routerIsInstalled = true;\r\n    }\r\n\r\n    const normalizedRoutes = routes.map(route => {\r\n        return typeof route === 'string'\r\n            ? stubRoute(route)\r\n            : route;\r\n    });\r\n\r\n    return new VueRouter({\r\n        abstract: true,\r\n        routes: normalizedRoutes,\r\n    });\r\n}\r\n\r\n// helper function to create a vuex store instance\r\nfunction createStore(rawModules, state) {\r\n    let Vuex = require('vuex');\r\n\r\n    if (typeof Vuex.default !== 'undefined') {\r\n        Vuex = Vuex.default;\r\n    }\r\n\r\n    if (!vuexIsInstalled) {\r\n        Vue.use(Vuex);\r\n        vuexIsInstalled = true;\r\n    }\r\n\r\n    // create a normalized copy of our vuex modules\r\n    const normalizedModules = normalizeModules(rawModules);\r\n\r\n    // merge in any test specific state\r\n    const modules = mergeTestState(normalizedModules, state);\r\n\r\n    // return the instantiated vuex store\r\n    return new Vuex.Store({ state, modules, strict: true });\r\n}\r\n\r\n// helper function to evaluate the state functions of vuex modules\r\nfunction normalizeModules(modules) {\r\n    const normalized = {};\r\n\r\n    Object.keys(modules).forEach((key) => {\r\n        const module = modules[key];\r\n\r\n        // make sure each vuex module has all keys defined\r\n        normalized[key] = {\r\n            actions: module.actions || {},\r\n            getters: module.getters || {},\r\n            modules: module.modules ? normalizeModules(module.modules) : {},\r\n            mutations: module.mutations || {},\r\n            namespaced: module.namespaced || false,\r\n            state: {},\r\n        };\r\n\r\n        // make sure our state is a fresh object\r\n        if (typeof module.state === 'function') {\r\n            normalized[key].state = module.state();\r\n        } else if (typeof module.state === 'object') {\r\n            normalized[key].state = JSON.parse(JSON.stringify(module.state));\r\n        }\r\n    });\r\n\r\n    return normalized;\r\n}\r\n\r\n// helper to find vuex modules via their namespace\r\nfunction findModule(store, namespace) {\r\n    return namespace.split('/').reduce((obj, key) => {\r\n        // root modules will exist directly on the store\r\n        if (obj && obj[key]) {\r\n            return obj[key];\r\n        }\r\n\r\n        // child stores will exist in a modules object\r\n        if (obj && obj.modules && obj.modules[key]) {\r\n            return obj.modules[key];\r\n        }\r\n\r\n        // if we couldn't find the module, throw an error\r\n        // istanbul ignore next\r\n        throw new Error(`Could not find module \"${namespace}\" in store.`);\r\n    }, store);\r\n}\r\n\r\n// helper function to merge state with vuex modules\r\nfunction mergeTestState(modules, state) {\r\n    Object.keys(state).forEach((key) => {\r\n        const module = findModule(modules, key);\r\n\r\n        if (module) {\r\n            module.state = merge(module.state, state[key]);\r\n        }\r\n    });\r\n\r\n    return modules;\r\n}\r\n"],"names":["isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","optionsArgument","clone","deepmerge","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","keys","forEach","key","sourceIsArray","targetIsArray","options","arrayMerge","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","deepmerge_1","name","h","replace","Vue","require","vuexIsInstalled","routerIsInstalled","factoryOpts","components","routes","state","baseOptions","document","createElement","Vuex","store","undefined","e","modules","warn","createStore","VueRouter","router","createRouter","VuexRouterSync","optionalRequire","sync","assign","default","use","normalizedRoutes","route","stubRoute","rawModules","normalizedModules","normalizeModules","mergeTestState","Store","strict","normalized","module","actions","getters","mutations","namespaced","babelHelpers.typeof","JSON","parse","stringify","findModule","namespace","split","obj","merge"],"mappings":"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"}